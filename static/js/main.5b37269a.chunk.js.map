{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","components/TodoCounter.js","components/TodoSearch.js","components/TodoList.js","components/TodoItem.js","components/CreateTodoButton.js","Modal/index.js","TodoForm/index.js","TodosError/index.js","TodosLoading/index.js","EmptyTodos/index.js","App/AppUI.js","App/index.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parseItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completedTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onCompleted","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","TodosError","TodosLoading","EmpyTodos","AppUI","Fragment","map","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.5b37269a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n\r\n    const {item: todos, saveItem: saveTodos, loading, error, } = useLocalStorage('TODOS_V1', []);\r\n\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n\r\n    const completedTodos = todos.filter( todo => !!todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    let searchedTodos = [];\r\n\r\n    if ( !searchValue.length >= 1 ) {\r\n        searchedTodos = todos;\r\n    } else {\r\n        searchedTodos = todos.filter(todo => {\r\n        const todoText = todo.text.toLowerCase();\r\n        const searchText = searchValue.toLowerCase();\r\n\r\n        return todoText.includes(searchText);\r\n        });\r\n\r\n    }\r\n\r\n    const completedTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        \r\n        newTodos[todoIndex].completed = true;\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        \r\n        newTodos.splice(todoIndex, 1);\r\n\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n\r\n        newTodos.push({\r\n            text: text,\r\n            completed: false,         \r\n        });\r\n        \r\n        saveTodos(newTodos);\r\n    };\r\n\r\n\r\n    return(\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completedTodo,\r\n            deleteTodo,\r\n            addTodo,\r\n            openModal,\r\n            setOpenModal,\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>        \r\n    );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [item, setItem] = React.useState(initialValue);\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n        try {\r\n            const localStorageItem = localStorage.getItem(itemName);\r\n            let parseItem;\r\n\r\n            if ( !localStorageItem ) {\r\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n            parseItem = initialValue;\r\n            } else {\r\n            parseItem = JSON.parse(localStorageItem);\r\n            }\r\n            \r\n            setItem(parseItem);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setError(error);\r\n        };\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n        const stringifiedItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifiedItem);\r\n        setItem(newItem);\r\n        } catch (error) {\r\n        setError(error);\r\n        }\r\n    };\r\n\r\n    return {\r\n        item,\r\n        saveItem,\r\n        loading,\r\n        error,\r\n    };\r\n}\r\n\r\nexport { useLocalStorage };","import React from \"react\";\r\nimport '../assets/css/TodoCounter.css';\r\nimport { TodoContext } from \"../TodoContext\";\r\n\r\nfunction TodoCounter() {\r\n\r\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\r\n    \r\n    return (\r\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\r\n    );\r\n}\r\n\r\nexport { TodoCounter };","import React from \"react\";\r\nimport '../assets/css/TodoSearch.css';\r\nimport { TodoContext } from \"../TodoContext\";\r\n\r\nfunction TodoSearch() {\r\n    const { searchValue, setSearchValue } = React.useContext(TodoContext);\r\n\r\n    const onSearchValueChange = (event) => {\r\n        console.log(event.target.value);\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <input \r\n            className=\"TodoSearch\"\r\n            placeholder='Cebolla'\r\n            value={searchValue}\r\n            onChange={onSearchValueChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport { TodoSearch };","import React from \"react\";\r\nimport '../assets/css/TodoList.css';\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport { TodoList };","import React from \"react\";\r\nimport '../assets/css/TodoItem.css';\r\n\r\nfunction TodoItem(props) {\r\n    return (\r\n      <li className=\"TodoItem\">\r\n        <span \r\n            className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\r\n            onClick={props.onCompleted}\r\n        >\r\n          Y\r\n        </span>\r\n        <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\r\n          {props.text}\r\n        </p>\r\n        <span\r\n            className=\"Icon Icon-delete\"\r\n            onClick={props.onDelete}\r\n        >\r\n          X\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  export { TodoItem };","import React from \"react\";\r\nimport '../assets/css/CreateTodoButton.css';\r\n\r\nfunction CreateTodoButton(props) {\r\n\r\n    const onClickButton = () => {\r\n        props.setOpenModal(prevState => !prevState);\r\n    };\r\n    \r\n    return (\r\n        <button \r\n            className=\"CreateTodoButton\"\r\n            onClick={onClickButton}\r\n        >\r\n            +\r\n        </button>\r\n    );\r\n}\r\n\r\nexport { CreateTodoButton };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalBackground\">\r\n      {children}\r\n    </div>,\r\n    document.getElementById('modal')\r\n  );\r\n}\r\n\r\nexport { Modal };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm() {\r\n\r\n    const {\r\n        addTodo,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n\r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value);\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    };\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} >\r\n            <label>Escribe tu nuevo To Do</label>\r\n            <textarea\r\n                value = {newTodoValue}\r\n                onChange = {onChange}\r\n                placeholder = \"Escribe una nueva tarea\"\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"TodoForm-button TodoForm-button-cancel\"\r\n                    onClick = {onCancel}\r\n                >\r\n                Cancelar\r\n                </button>\r\n\r\n                <button\r\n                    className=\"TodoForm-button TodoForm-button-add\"\r\n                    type= \"submit\"\r\n                >\r\n                Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport { TodoForm };","import React from \"react\";\r\n\r\nfunction TodosError({ error }) {\r\n    return <p>Error</p>;\r\n}\r\n\r\nexport { TodosError };","import React from \"react\";\r\nimport './TodosLoading.css';\r\n\r\nfunction TodosLoading() {\r\n    return (\r\n      <div className=\"LoadingTodo-container\">\r\n        <span className=\"LoadingTodo-completeIcon\"></span>\r\n        <p className=\"LoadingTodo-text\">Cargando TODOs...</p>\r\n        <span className=\"LoadingTodo-deleteIcon\"></span>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport { TodosLoading };","import React from \"react\";\r\n\r\nfunction EmpyTodos() {\r\n    return <p>Crea tu primer todo</p>;\r\n}\r\n\r\nexport { EmpyTodos };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport { TodoCounter } from '../components/TodoCounter';\r\nimport { TodoSearch } from '../components/TodoSearch';\r\nimport { TodoList } from '../components/TodoList';\r\nimport { TodoItem } from '../components/TodoItem';\r\nimport { CreateTodoButton } from '../components/CreateTodoButton';\r\nimport { Modal } from '../Modal';\r\nimport { TodoForm } from '../TodoForm';\r\n\r\n/* cargas */\r\nimport { TodosError } from '../TodosError';\r\nimport { TodosLoading } from '../TodosLoading';\r\nimport { EmpyTodos } from '../EmptyTodos';\r\n\r\nfunction AppUI() {\r\n\r\n    const {\r\n        error,\r\n        loading,\r\n        searchedTodos,\r\n        completedTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    return(\r\n    <React.Fragment>\r\n      <TodoCounter />\r\n\r\n      <TodoSearch />\r\n        <TodoList>\r\n            {error && <TodosError error={error} />}\r\n            {loading && <TodosLoading />}        \r\n            {(!loading && !searchedTodos.length) && <EmpyTodos />}\r\n    \r\n            { searchedTodos.map(todo => (\r\n            <TodoItem \r\n                key={todo.text}\r\n                text={todo.text}\r\n                completed={todo.completed}\r\n                onCompleted={() => completedTodo(todo.text)}\r\n                onDelete={() => deleteTodo(todo.text)}\r\n            />\r\n            ))}\r\n        </TodoList>\r\n\r\n        {openModal && (\r\n            <Modal>\r\n                <TodoForm />\r\n            </Modal>\r\n        )}\r\n\r\n      <CreateTodoButton \r\n        setOpenModal={setOpenModal}\r\n      />\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { AppUI };","import React from 'react';\r\nimport { AppUI } from './AppUI';\r\nimport { TodoProvider } from '../TodoContext';\r\n\r\nimport './App.css';\r\n\r\n/* const defaultTodos = [\r\n  { text: 'cortar cebolla', completed: false },\r\n  { text: 'Intro a react', completed: false },\r\n  { text: 'llorar con la llorona', completed: false },\r\n]; */\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  \r\n\r\n  return (\r\n    <TodoProvider>\r\n      <AppUI />\r\n    </TodoProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/css/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}